<?xml version="1.0" encoding="UTF-8"?>
<!--
    Verb definitions for this channel.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
    default-lazy-init="true"
    xmlns:c="http://www.springframework.org/schema/c"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!--
        Import commonly used beans.
    -->
    <import resource="classpath:common-beans.xml"/>

    <!--
        Import channel-specific beans.
    -->
    <import resource="classpath:int_edugain/beans.xml"/>

    <!--
        Import ukf channel beans, for uk_assemble.
    -->
    <import resource="classpath:uk/beans.xml"/>

    <!--
        Import UK federation ingress policy for eduGAIN.
    -->
    <import resource="classpath:uk/edugain-policy.xml"/>

    <bean id="serializeImported" parent="mda.SerializationStage">
        <property name="serializer" ref="serializer"/>
        <property name="outputFile">
            <bean parent="File">
                <constructor-arg value="${mdx.dir}/int_edugain/imported.xml"/>
            </bean>
        </property>
    </bean>

    <!--
        removeUKEntities

        Filter out entities which declare themselves as registered
        by the UK federation, as we don't need to verify those.
    -->
    <bean id="removeUKEntities" parent="mda.EntityRegistrationAuthorityFilterStage">
        <property name="designatedRegistrationAuthorities">
            <list>
                <ref bean="uk_ukf_registrar"/>
            </list>
        </property>
    </bean>

    <bean id="importProduction" parent="mda.SimplePipeline">
        <property name="stages">
            <list>
                <ref bean="int_edugain_productionEntities"/>
                <ref bean="standardImportActions"/>
                <ref bean="edugainPolicy"/>
                <ref bean="standardImportTail"/>
                <ref bean="serializeImported"/>
            </list>
        </property>
    </bean>

    <bean id="importProductionRaw" parent="mda.SimplePipeline">
        <property name="stages">
            <list>
                <ref bean="int_edugain_productionAggregate"/>
                <ref bean="serializeImported"/>
            </list>
        </property>
    </bean>

    <!--
        verify

        Verifies that entities being imported from eduGAIN match our checks.
        Intended to be run from Jenkins once a week. Errors on the verification
        blacklist are ignored, so that we only need to deal with each entity
        entering an error state once.
    -->
    <bean id="verify" parent="mda.SimplePipeline">
        <property name="stages">
            <list>
                <ref bean="int_edugain_productionEntities"/>
                <ref bean="removeUKEntities"/>
                <bean id="removeBlacklistedEntities" parent="mda.EntityFilterStage"
                    p:keepingEntities="false"
                    p:designatedEntities-ref="int_edugain_verify_blacklist"/>

                <!--
                    Sort the remaining entities by entity ID, so that any errors
                    are reported in a stable order, even if some registrars
                    have unstable output.

                    Ideally this should be handled by an explicit ordering stage.
                    Lacking one, we use the fact that we can use the ordering
                    strategy ability of the EntitiesDescriptor assembler to
                    order entities, and then disassemble again. Ordering is based
                    on the ItemID populated into the item metadata.
                -->
                <ref bean="populateItemIds"/>
                <ref bean="uk_assemble"/>
                <ref bean="disassemble"/>

                <ref bean="standardImportActions"/>
                <ref bean="edugainPolicy"/>
                <ref bean="warningAndErrorAnnouncer"/>
                <ref bean="errorTerminator"/>
            </list>
        </property>
    </bean>

    <!--
        verify.new

        Live verify, but adding "new" checks that we don't impose on the live import.
    -->
    <bean id="verify.new" parent="mda.SimplePipeline">
        <property name="stages">
            <list>
                <ref bean="int_edugain_productionEntities"/>
                <ref bean="removeUKEntities"/>
                <bean id="removeBlacklistedEntities" parent="mda.EntityFilterStage"
                    p:keepingEntities="false"
                    p:designatedEntities-ref="int_edugain_verify_blacklist"/>

                <ref bean="standardImportActions"/>
                <ref bean="edugainPolicy"/>
                <ref bean="errorTerminatingFilter"/>
            </list>
        </property>
    </bean>

    <!--
        verify.recovered

        Looks for eduGAIN entities which *were* in an error state, as shown by
        their inclusion in our verification blacklist, but have now recovered.
    -->
    <bean id="verify.recovered" parent="mda.SimplePipeline">
        <property name="stages">
            <list>
                <ref bean="int_edugain_productionEntities"/>
                <ref bean="removeUKEntities"/>

                <!-- remove all entities which still have errors -->
                <ref bean="standardImportActions"/>
                <ref bean="edugainPolicy"/>
                <ref bean="errorRemover"/>

                <!-- remove all entities *other* than the ones in the blacklist -->
                <bean id="removeAllButBlacklistedEntities" parent="mda.EntityFilterStage"
                    p:keepingEntities="true"
                    p:designatedEntities-ref="int_edugain_verify_blacklist"/>

                <!-- flag up any remaining entities -->
                <bean id="check_recovered" parent="mda.XSLValidationStage"
                    p:XSLResource="classpath:int_edugain/check_recovered.xsl"/>

                <ref bean="errorTerminatingFilter"/>
            </list>
        </property>
    </bean>

    <!--
        verify.all

        Same as verify, but not making use of the validation
        blacklist. Can be used to check up on blacklisted entities.

        Output also includes any warnings attached to entities, although
        these do not result in an error termination.
    -->
    <bean id="verify.all" parent="mda.SimplePipeline">
        <property name="stages">
            <list>
                <ref bean="int_edugain_productionEntities"/>
                <ref bean="removeUKEntities"/>

                <!--
                    Sort the remaining entities by entity ID, so that any errors
                    are reported in a stable order, even if some registrars
                    have unstable output.
                    
                    Ideally this should be handled by an explicit ordering stage.
                    Lacking one, we use the fact that we can use the ordering
                    strategy ability of the EntitiesDescriptor assembler to
                    order entities, and then disassemble again. Ordering is based
                    on the ItemID populated into the item metadata.
                -->
                <ref bean="populateItemIds"/>
                <ref bean="uk_assemble"/>
                <ref bean="disassemble"/>

                <ref bean="standardImportActions"/>
                <ref bean="edugainPolicy"/>

                <ref bean="warningAndErrorAnnouncer"/>
                <ref bean="errorTerminator"/>
            </list>
        </property>
    </bean>

    <alias alias="import"    name="importProduction"/>
    <alias alias="importRaw" name="importProductionRaw"/>
</beans>
